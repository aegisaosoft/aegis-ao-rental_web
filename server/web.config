<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <webSocket enabled="false" />
    <handlers>
      <add name="iisnode" path="index.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <!-- Don't interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^index.js\/debug[\/]?" />
        </rule>
        
        <!-- Serve favicon directly from public folder -->
        <rule name="Favicon" stopProcessing="true">
          <match url="^favicon.ico$" />
          <action type="Rewrite" url="public/favicon.ico" />
        </rule>
        
        <!-- Serve static files from public folder (CSS, JS, images, etc.) -->
        <rule name="StaticFiles" stopProcessing="true">
          <match url="^(static/.*|.*\.(css|js|json|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot))$" />
          <action type="Rewrite" url="public/{R:0}" />
        </rule>
        
        <!-- All other URLs are mapped to the node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="index.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- Static content MIME types -->
    <staticContent>
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
    
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>
    
    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />
    
    <!-- You can control how Node is hosted within IIS using the following options:
      * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
      * node_env: will be propagated to node as NODE_ENV environment variable
      * debuggingEnabled - controls whether the built-in debugger is enabled
      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options -->
    <iisnode node_env="production" loggingEnabled="true" logDirectory="iisnode" watchedFiles="web.config;*.js"/>
  </system.webServer>
</configuration>

