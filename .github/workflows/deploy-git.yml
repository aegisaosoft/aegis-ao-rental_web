name: Deploy Aegis-AO Rental to Azure Web App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: deploy-azure-webapp
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4
      
    - name: 'Setup Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: 'Install root dependencies'
      run: |
        npm install
        echo "‚úÖ Root dependencies installed"
        
    - name: 'Install and build client'
      run: |
        cd client
        npm install
        echo "‚úÖ Client dependencies installed"
        echo "Checking if react-scripts is installed:"
        ls -la node_modules/.bin/ | grep react-scripts || echo "react-scripts not found"
        npm run build
        echo "‚úÖ React client built successfully"
        
    - name: 'Install server dependencies'
      run: |
        cd server
        npm install
        echo "‚úÖ Server dependencies installed"
        
    - name: 'Create deployment package'
      run: |
        # Create directory structure
        mkdir -p deploy/server
        mkdir -p deploy/public
        mkdir -p deploy/client/build
        
        # Copy files
        cp -r server/* deploy/server/
        cp -r client/build/* deploy/public/
        cp package.json deploy/
        cp package-lock.json deploy/
        
        # Create web.config for IIS
        echo '<?xml version="1.0" encoding="utf-8"?>' > deploy/web.config
        echo '<configuration>' >> deploy/web.config
        echo '  <system.webServer>' >> deploy/web.config
        echo '    <webSocket enabled="false" />' >> deploy/web.config
        echo '    <handlers>' >> deploy/web.config
        echo '      <add name="iisnode" path="server/index.js" verb="*" modules="iisnode"/>' >> deploy/web.config
        echo '    </handlers>' >> deploy/web.config
        echo '    <rewrite>' >> deploy/web.config
        echo '      <rules>' >> deploy/web.config
        echo '        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">' >> deploy/web.config
        echo '          <match url="^server/index.js\/debug[\/]?" />' >> deploy/web.config
        echo '        </rule>' >> deploy/web.config
        echo '        <rule name="StaticContent">' >> deploy/web.config
        echo '          <action type="Rewrite" url="public{REQUEST_URI}"/>' >> deploy/web.config
        echo '        </rule>' >> deploy/web.config
        echo '        <rule name="DynamicContent">' >> deploy/web.config
        echo '          <conditions>' >> deploy/web.config
        echo '            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>' >> deploy/web.config
        echo '          </conditions>' >> deploy/web.config
        echo '          <action type="Rewrite" url="server/index.js"/>' >> deploy/web.config
        echo '        </rule>' >> deploy/web.config
        echo '      </rules>' >> deploy/web.config
        echo '    </rewrite>' >> deploy/web.config
        echo '    <security>' >> deploy/web.config
        echo '      <requestFiltering>' >> deploy/web.config
        echo '        <hiddenSegments>' >> deploy/web.config
        echo '          <remove segment="bin"/>' >> deploy/web.config
        echo '        </hiddenSegments>' >> deploy/web.config
        echo '      </requestFiltering>' >> deploy/web.config
        echo '    </security>' >> deploy/web.config
        echo '    <httpErrors existingResponse="PassThrough" />' >> deploy/web.config
        echo '    <iisnode watchedFiles="web.config;*.js"/>' >> deploy/web.config
        echo '  </system.webServer>' >> deploy/web.config
        echo '</configuration>' >> deploy/web.config
        
        echo "‚úÖ Deployment package created"
        ls -la deploy/
        
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Configure Azure Web App for Node.js'
      run: |
        # Stop the web app
        az webapp stop --name aegis-ao-rental-web --resource-group aegis-ao-rental || echo "App was already stopped"
        
        # Configure for Node.js (not Docker)
        az webapp config set \
          --name aegis-ao-rental-web \
          --resource-group aegis-ao-rental \
          --linux-fx-version "NODE|20-lts"
        echo "‚úÖ Node.js runtime configured"
        
        # Set startup command
        az webapp config set \
          --name aegis-ao-rental-web \
          --resource-group aegis-ao-rental \
          --startup-file "node server/index.js"
        echo "‚úÖ Startup command set"
        
        # Disable build during deployment
        az webapp config appsettings set \
          --name aegis-ao-rental-web \
          --resource-group aegis-ao-rental \
          --settings SCM_DO_BUILD_DURING_DEPLOYMENT=false
        echo "‚úÖ Build during deployment disabled"
        
        # Set environment variables
        az webapp config appsettings set \
          --name aegis-ao-rental-web \
          --resource-group aegis-ao-rental \
          --settings NODE_ENV=production PORT=8080
        echo "‚úÖ Environment variables set"
        
        # Verify configuration
        echo "üîç Verifying configuration..."
        az webapp config show --name aegis-ao-rental-web --resource-group aegis-ao-rental --query "{linuxFxVersion:linuxFxVersion, appCommandLine:appCommandLine}" --output table
        
        echo "‚úÖ Azure Web App configured for Node.js"
        
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'aegis-ao-rental-web'
        package: './deploy'
        
    - name: 'Start app and verify'
      run: |
        az webapp start --name aegis-ao-rental-web --resource-group aegis-ao-rental
        sleep 10
        az webapp show --name aegis-ao-rental-web --resource-group aegis-ao-rental --query "{state:state, defaultHostName:defaultHostName}" --output table
        echo "üéâ Deployment complete!"

